{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projets\\\\Portfoliomaster\\\\src\\\\components\\\\Darmode\\\\Toggle.js\";\nimport React, { useState } from \"react\";\nimport Toggle from \"react-toggle\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst DarkModeToggle = () => {\n  const [isDark, setIsDark] = useState(true); //   const systemPrefersDark = useMediaQuery(\n  //     {\n  //       query: \"(prefers-color-scheme: dark)\",\n  //     },\n  //     undefined,\n  //     (isSystemDark) => setIsDark(isSystemDark)\n  //   );\n\n  return /*#__PURE__*/React.createElement(Toggle, {\n    checked: isDark,\n    onChange: ({\n      target\n    }) => setIsDark(target.checked),\n    icons: {\n      checked: \"ðŸŒ™\",\n      unchecked: \"ðŸ”†\"\n    },\n    \"aria-label\": \"Dark mode toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DarkModeToggle;","map":{"version":3,"sources":["D:/Projets/Portfoliomaster/src/components/Darmode/Toggle.js"],"names":["React","useState","Toggle","useMediaQuery","DarkModeToggle","isDark","setIsDark","target","checked","unchecked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,MAAQC,cAAc,GAAG,MAAM;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC,CAD6B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEI,MADX;AAEE,IAAA,QAAQ,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAgBD,SAAS,CAACC,MAAM,CAACC,OAAR,CAFrC;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAHT;AAIE,kBAAW,kBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAnBD;;AAqBA,eAAeL,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst   DarkModeToggle = () => {\r\n  const [isDark, setIsDark] = useState(true);\r\n\r\n//   const systemPrefersDark = useMediaQuery(\r\n//     {\r\n//       query: \"(prefers-color-scheme: dark)\",\r\n//     },\r\n//     undefined,\r\n//     (isSystemDark) => setIsDark(isSystemDark)\r\n//   );\r\n\r\n  return (\r\n    <Toggle\r\n      checked={isDark}\r\n      onChange={({ target }) => setIsDark(target.checked)}\r\n      icons={{ checked: \"ðŸŒ™\", unchecked: \"ðŸ”†\" }}\r\n      aria-label=\"Dark mode toggle\"\r\n    />\r\n  );\r\n};\r\n  \r\nexport default DarkModeToggle;"]},"metadata":{},"sourceType":"module"}