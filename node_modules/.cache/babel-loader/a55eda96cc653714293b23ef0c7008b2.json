{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../useCompound';\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useOption API](https://mui.com/base-ui/react-select/hooks-api/#use-option)\n */\n\nexport function useOption(params) {\n  var value = params.value,\n      label = params.label,\n      disabled = params.disabled,\n      optionRefParam = params.rootRef,\n      idParam = params.id;\n\n  var _useListItem = useListItem({\n    item: value\n  }),\n      getListItemProps = _useListItem.getRootProps,\n      highlighted = _useListItem.highlighted,\n      selected = _useListItem.selected;\n\n  var id = useId(idParam);\n  var optionRef = React.useRef(null);\n  var selectOption = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      label: label,\n      value: value,\n      ref: optionRef,\n      id: id\n    };\n  }, [disabled, label, value, id]);\n\n  var _useCompoundItem = useCompoundItem(value, selectOption),\n      index = _useCompoundItem.index;\n\n  var handleRef = useForkRef(optionRefParam, optionRef);\n  return {\n    getRootProps: function getRootProps() {\n      var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var externalEventHandlers = extractEventHandlers(externalProps);\n      return _extends({}, externalProps, getListItemProps(externalEventHandlers), {\n        id: id,\n        ref: handleRef,\n        role: 'option',\n        'aria-selected': selected\n      });\n    },\n    highlighted: highlighted,\n    index: index,\n    selected: selected,\n    rootRef: handleRef\n  };\n}","map":null,"metadata":{},"sourceType":"module"}