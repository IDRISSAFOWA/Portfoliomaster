{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projets\\\\Portfoliomaster\\\\src\\\\components\\\\Darmode\\\\Toggle.js\";\nimport * as React from 'react';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nexport const DarkModeToggle = () => {\n  const [isDark, setIsDark] = useState(true);\n  const systemPrefersDark = useMediaQuery({\n    query: \"(prefers-color-scheme: dark)\"\n  }, undefined, isSystemDark => setIsDark(isSystemDark));\n  return /*#__PURE__*/React.createElement(Toggle, {\n    checked: isDark,\n    onChange: ({\n      target\n    }) => setIsDark(target.checked),\n    icons: {\n      checked: \"ðŸŒ™\",\n      unchecked: \"ðŸ”†\"\n    },\n    \"aria-label\": \"Dark mode toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\nexport default DarkModeToggle;","map":{"version":3,"sources":["D:/Projets/Portfoliomaster/src/components/Darmode/Toggle.js"],"names":["React","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","ToggleButton","ToggleButtonGroup","DarkModeToggle","isDark","setIsDark","useState","systemPrefersDark","useMediaQuery","query","undefined","isSystemDark","target","checked","unchecked"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMC,iBAAiB,GAAGC,aAAa,CACrC;AACEC,IAAAA,KAAK,EAAE;AADT,GADqC,EAIrCC,SAJqC,EAKpCC,YAAD,IAAkBN,SAAS,CAACM,YAAD,CALU,CAAvC;AAQA,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEP,MADX;AAEE,IAAA,QAAQ,EAAE,CAAC;AAAEQ,MAAAA;AAAF,KAAD,KAAgBP,SAAS,CAACO,MAAM,CAACC,OAAR,CAFrC;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAHT;AAIE,kBAAW,kBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAnBM;AAoBP,eAAeX,cAAf","sourcesContent":["import * as React from 'react';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\n\r\nexport const DarkModeToggle = () => {\r\n  const [isDark, setIsDark] = useState(true);\r\n\r\n  const systemPrefersDark = useMediaQuery(\r\n    {\r\n      query: \"(prefers-color-scheme: dark)\",\r\n    },\r\n    undefined,\r\n    (isSystemDark) => setIsDark(isSystemDark)\r\n  );\r\n\r\n  return (\r\n    <Toggle\r\n      checked={isDark}\r\n      onChange={({ target }) => setIsDark(target.checked)}\r\n      icons={{ checked: \"ðŸŒ™\", unchecked: \"ðŸ”†\" }}\r\n      aria-label=\"Dark mode toggle\"\r\n    />\r\n  );\r\n};\r\nexport default DarkModeToggle;"]},"metadata":{},"sourceType":"module"}