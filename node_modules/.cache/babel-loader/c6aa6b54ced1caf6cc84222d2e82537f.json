{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projets\\\\Portfoliomaster\\\\src\\\\components\\\\Darmode\\\\Toggle.js\";\nimport * as React from 'react';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport French from '../../assests/images/french.png';\nimport English from '../../assests/images/english.png';\nimport { Box } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nconst DarkModeToggle = () => {\n  const [alignment, setAlignment] = React.useState('Fr');\n  const [alignment1, setAlignment1] = React.useState('L');\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  function changeLangi18n(lang) {\n    //alert(lang)\n    i18n.changeLanguage(lang);\n  }\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment !== alignment && newAlignment !== null) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  const handleAlignment1 = (event, newAlignment) => {\n    if (newAlignment !== alignment1 && newAlignment !== null) {\n      setAlignment1(newAlignment);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    display: 'flex',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: alignment,\n    exclusive: true,\n    size: \"small\",\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"Fr\",\n    onClick: e => {\n      changeLangi18n(\"fr\");\n    },\n    \"aria-label\": \"left aligned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: French,\n    width: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"En\",\n    onClick: e => {\n      changeLangi18n(\"en\");\n    },\n    \"aria-label\": \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: English,\n    width: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: alignment1,\n    exclusive: true,\n    size: \"small\",\n    onChange: handleAlignment1,\n    \"aria-label\": \"text alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"L\",\n    \"aria-label\": \"left aligned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDF19\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"D\",\n    \"aria-label\": \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDD06\")));\n};\n\nexport default DarkModeToggle;","map":{"version":3,"sources":["D:/Projets/Portfoliomaster/src/components/Darmode/Toggle.js"],"names":["React","ToggleButton","ToggleButtonGroup","French","English","Box","useTranslation","DarkModeToggle","alignment","setAlignment","useState","alignment1","setAlignment1","t","i18n","changeLangi18n","lang","changeLanguage","handleAlignment","event","newAlignment","handleAlignment1","e"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport French from '../../assests/images/french.png';\r\nimport English from '../../assests/images/english.png';\r\nimport { Box } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DarkModeToggle = () => {\r\n    const [alignment, setAlignment] = React.useState('Fr');\r\n    const [alignment1, setAlignment1] = React.useState('L');\r\n    const {t, i18n} = useTranslation();\r\n\r\n    function changeLangi18n(lang) {\r\n        //alert(lang)\r\n        i18n.changeLanguage(lang);\r\n      }\r\n\r\n    const handleAlignment = (event, newAlignment) => {\r\n        if (newAlignment !== alignment && newAlignment !== null) { setAlignment(newAlignment); }\r\n    };\r\n\r\n    const handleAlignment1 = (event, newAlignment) => {\r\n        if (newAlignment !== alignment1 && newAlignment !== null) { setAlignment1(newAlignment); }\r\n    };\r\n\r\n    return (\r\n        <Box display={'flex'}>\r\n            <ToggleButtonGroup\r\n                value={alignment}\r\n                exclusive\r\n                size='small'\r\n                onChange={handleAlignment}\r\n                aria-label=\"text alignment\"\r\n            >\r\n                <ToggleButton value=\"Fr\"onClick={e=>{changeLangi18n(\"fr\")}} aria-label=\"left aligned\">\r\n                    <img src={French} width={30} />\r\n                </ToggleButton>\r\n\r\n                <ToggleButton value=\"En\" onClick={e=>{changeLangi18n(\"en\")}} aria-label=\"centered\">\r\n                    <img src={English} width={22} />\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n\r\n            <ToggleButtonGroup value={alignment1} exclusive size='small' onChange={handleAlignment1} aria-label=\"text alignment\" >\r\n                <ToggleButton value=\"L\" aria-label=\"left aligned\">\r\n                    ðŸŒ™\r\n                </ToggleButton>\r\n                <ToggleButton value=\"D\" aria-label=\"centered\">\r\n                    ðŸ”†\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            \r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default DarkModeToggle;"]},"metadata":{},"sourceType":"module"}