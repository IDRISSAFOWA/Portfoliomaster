{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projets\\\\Portfoliomaster\\\\src\\\\components\\\\Darmode\\\\Toggle.js\";\nimport * as React from 'react';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Tooltip from '@mui/material/Tooltip';\nimport French from '../../assests/images/french.png';\nimport English from '../../assests/images/english.png';\nimport { Box } from '@mui/material';\n\nconst DarkModeToggle = () => {\n  const [alignment, setAlignment] = React.useState('Fr');\n  const [alignment1, setAlignment1] = React.useState('L');\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment != alignment) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  const handleAlignment1 = (event, newAlignment) => {\n    if (newAlignment != alignment1) {\n      setAlignment1(newAlignment);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    display: 'flex',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: alignment,\n    exclusive: true,\n    size: \"small\",\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"Fr\",\n    \"aria-label\": \"left aligned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: French,\n    width: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"En\",\n    \"aria-label\": \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: English,\n    width: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: alignment1,\n    exclusive: true,\n    size: \"small\",\n    onChange: handleAlignment1,\n    \"aria-label\": \"text alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"L\",\n    \"aria-label\": \"left aligned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDF19\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"D\",\n    \"aria-label\": \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDD06\")));\n};\n\nexport default DarkModeToggle;","map":{"version":3,"sources":["D:/Projets/Portfoliomaster/src/components/Darmode/Toggle.js"],"names":["React","ToggleButton","ToggleButtonGroup","Tooltip","French","English","Box","DarkModeToggle","alignment","setAlignment","useState","alignment1","setAlignment1","handleAlignment","event","newAlignment","handleAlignment1"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,GAAT,QAAoB,eAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAAe,IAAf,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACU,QAAN,CAAe,GAAf,CAApC;;AAEA,QAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;AAC7C,QAAGA,YAAY,IAAEP,SAAjB,EAA2B;AAACC,MAAAA,YAAY,CAACM,YAAD,CAAZ;AAA4B;AAC3D,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,CAACF,KAAD,EAAQC,YAAR,KAAyB;AAC9C,QAAGA,YAAY,IAAEJ,UAAjB,EAA4B;AAACC,MAAAA,aAAa,CAACG,YAAD,CAAb;AAA6B;AAC7D,GAFD;;AAIA,sBACI,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAE,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAEP,SADX;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAEK,eAJd;AAKI,kBAAW,gBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOQ,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,IAApB;AAAyB,kBAAW,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAET,MAAV;AAAkB,IAAA,KAAK,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPR,eAYQ,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,IAApB;AAAyB,kBAAW,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,KAAK,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZR,CADJ,eAmBI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAEM,UADX;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAEK,gBAJd;AAKI,kBAAW,gBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,GAApB;AAAwB,kBAAW,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkD,cAAlD,CARJ,eAYI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,GAApB;AAAwB,kBAAW,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8C,cAA9C,CAZJ,CAnBJ,CADJ;AAuCH,CAlDD;;AAoDA,eAAeT,cAAf","sourcesContent":["import * as React from 'react';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport French from '../../assests/images/french.png';\r\nimport English from '../../assests/images/english.png';\r\nimport { Box } from '@mui/material';\r\n\r\nconst DarkModeToggle = () => {\r\n    const [alignment, setAlignment] = React.useState('Fr');\r\n    const [alignment1, setAlignment1] = React.useState('L');\r\n\r\n    const handleAlignment = (event, newAlignment) => {\r\n        if(newAlignment!=alignment){setAlignment(newAlignment);}\r\n    };\r\n    const handleAlignment1 = (event, newAlignment) => {\r\n        if(newAlignment!=alignment1){setAlignment1(newAlignment);}\r\n    };\r\n\r\n    return (\r\n        <Box display={'flex'}>\r\n            <ToggleButtonGroup\r\n                value={alignment}\r\n                exclusive\r\n                size='small'\r\n                onChange={handleAlignment}\r\n                aria-label=\"text alignment\"\r\n            >\r\n                    <ToggleButton value=\"Fr\" aria-label=\"left aligned\">\r\n                        <img src={French} width={30} />\r\n                    </ToggleButton>\r\n           \r\n                \r\n                    <ToggleButton value=\"En\" aria-label=\"centered\">\r\n                        <img src={English} width={22} />\r\n                    </ToggleButton>\r\n             \r\n            </ToggleButtonGroup>\r\n\r\n            <ToggleButtonGroup\r\n                value={alignment1}\r\n                exclusive\r\n                size='small'\r\n                onChange={handleAlignment1}\r\n                aria-label=\"text alignment\"\r\n            >\r\n\r\n                <ToggleButton value=\"L\" aria-label=\"left aligned\">\r\n                    ðŸŒ™\r\n                </ToggleButton>\r\n\r\n                <ToggleButton value=\"D\" aria-label=\"centered\">\r\n                    ðŸ”†\r\n                </ToggleButton>\r\n\r\n            </ToggleButtonGroup>\r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default DarkModeToggle;"]},"metadata":{},"sourceType":"module"}