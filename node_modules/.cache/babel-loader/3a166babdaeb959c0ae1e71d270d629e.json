{"ast":null,"code":"import _slicedToArray from\"D:\\\\Projets\\\\Portfoliomaster\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import*as React from'react';import ToggleButton from'@mui/material/ToggleButton';import ToggleButtonGroup from'@mui/material/ToggleButtonGroup';import French from'../../assests/images/french.png';import English from'../../assests/images/english.png';import{Box}from'@mui/material';import{useTranslation}from'react-i18next';var DarkModeToggle=function DarkModeToggle(){var _React$useState=React.useState('Fr'),_React$useState2=_slicedToArray(_React$useState,2),alignment=_React$useState2[0],setAlignment=_React$useState2[1];var _React$useState3=React.useState('L'),_React$useState4=_slicedToArray(_React$useState3,2),alignment1=_React$useState4[0],setAlignment1=_React$useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;function changeLangi18n(lang){//alert(lang)\ni18n.changeLanguage(lang);}var handleAlignment=function handleAlignment(event,newAlignment){if(newAlignment!==alignment&&newAlignment!==null){setAlignment(newAlignment);}};var handleAlignment1=function handleAlignment1(event,newAlignment){if(newAlignment!==alignment1&&newAlignment!==null){setAlignment1(newAlignment);}};return/*#__PURE__*/React.createElement(Box,{display:'flex'},/*#__PURE__*/React.createElement(ToggleButtonGroup,{value:alignment,exclusive:true,size:\"small\",onChange:handleAlignment,\"aria-label\":\"text alignment\"},/*#__PURE__*/React.createElement(ToggleButton,{value:\"Fr\",onClick:function onClick(e){changeLangi18n(\"fr\");},\"aria-label\":\"left aligned\"},/*#__PURE__*/React.createElement(\"img\",{src:French,width:30})),/*#__PURE__*/React.createElement(ToggleButton,{value:\"En\",onClick:function onClick(e){changeLangi18n(\"en\");},\"aria-label\":\"centered\"},/*#__PURE__*/React.createElement(\"img\",{src:English,width:22}))));};export default DarkModeToggle;","map":{"version":3,"sources":["D:/Projets/Portfoliomaster/src/components/Darmode/Toggle.js"],"names":["React","ToggleButton","ToggleButtonGroup","French","English","Box","useTranslation","DarkModeToggle","useState","alignment","setAlignment","alignment1","setAlignment1","t","i18n","changeLangi18n","lang","changeLanguage","handleAlignment","event","newAlignment","handleAlignment1","e"],"mappings":"wJAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,iCAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iCAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kCAApB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,qBACSP,KAAK,CAACQ,QAAN,CAAe,IAAf,CADT,oDAClBC,SADkB,qBACPC,YADO,0CAEWV,KAAK,CAACQ,QAAN,CAAe,GAAf,CAFX,qDAElBG,UAFkB,qBAENC,aAFM,yCAGPN,cAAc,EAHP,CAGlBO,CAHkB,iBAGlBA,CAHkB,CAGfC,IAHe,iBAGfA,IAHe,CAKzB,QAASC,CAAAA,cAAT,CAAwBC,IAAxB,CAA8B,CAC1B;AACAF,IAAI,CAACG,cAAL,CAAoBD,IAApB,EACD,CAEH,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,YAAR,CAAyB,CAC7C,GAAIA,YAAY,GAAKX,SAAjB,EAA8BW,YAAY,GAAK,IAAnD,CAAyD,CAAEV,YAAY,CAACU,YAAD,CAAZ,CAA6B,CAC3F,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACF,KAAD,CAAQC,YAAR,CAAyB,CAC9C,GAAIA,YAAY,GAAKT,UAAjB,EAA+BS,YAAY,GAAK,IAApD,CAA0D,CAAER,aAAa,CAACQ,YAAD,CAAb,CAA8B,CAC7F,CAFD,CAIA,mBACI,oBAAC,GAAD,EAAK,OAAO,CAAE,MAAd,eACI,oBAAC,iBAAD,EACI,KAAK,CAAEX,SADX,CAEI,SAAS,KAFb,CAGI,IAAI,CAAC,OAHT,CAII,QAAQ,CAAES,eAJd,CAKI,aAAW,gBALf,eAOI,oBAAC,YAAD,EAAc,KAAK,CAAC,IAApB,CAAwB,OAAO,CAAE,iBAAAI,CAAC,CAAE,CAACP,cAAc,CAAC,IAAD,CAAd,CAAqB,CAA1D,CAA4D,aAAW,cAAvE,eACI,2BAAK,GAAG,CAAEZ,MAAV,CAAkB,KAAK,CAAE,EAAzB,EADJ,CAPJ,cAWI,oBAAC,YAAD,EAAc,KAAK,CAAC,IAApB,CAAyB,OAAO,CAAE,iBAAAmB,CAAC,CAAE,CAACP,cAAc,CAAC,IAAD,CAAd,CAAqB,CAA3D,CAA6D,aAAW,UAAxE,eACI,2BAAK,GAAG,CAAEX,OAAV,CAAmB,KAAK,CAAE,EAA1B,EADJ,CAXJ,CADJ,CADJ,CA6BH,CA/CD,CAiDA,cAAeG,CAAAA,cAAf","sourcesContent":["import * as React from 'react';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport French from '../../assests/images/french.png';\r\nimport English from '../../assests/images/english.png';\r\nimport { Box } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DarkModeToggle = () => {\r\n    const [alignment, setAlignment] = React.useState('Fr');\r\n    const [alignment1, setAlignment1] = React.useState('L');\r\n    const {t, i18n} = useTranslation();\r\n\r\n    function changeLangi18n(lang) {\r\n        //alert(lang)\r\n        i18n.changeLanguage(lang);\r\n      }\r\n\r\n    const handleAlignment = (event, newAlignment) => {\r\n        if (newAlignment !== alignment && newAlignment !== null) { setAlignment(newAlignment); }\r\n    };\r\n\r\n    const handleAlignment1 = (event, newAlignment) => {\r\n        if (newAlignment !== alignment1 && newAlignment !== null) { setAlignment1(newAlignment); }\r\n    };\r\n\r\n    return (\r\n        <Box display={'flex'}>\r\n            <ToggleButtonGroup\r\n                value={alignment}\r\n                exclusive\r\n                size='small'\r\n                onChange={handleAlignment}\r\n                aria-label=\"text alignment\"\r\n            >\r\n                <ToggleButton value=\"Fr\"onClick={e=>{changeLangi18n(\"fr\")}} aria-label=\"left aligned\">\r\n                    <img src={French} width={30} />\r\n                </ToggleButton>\r\n\r\n                <ToggleButton value=\"En\" onClick={e=>{changeLangi18n(\"en\")}} aria-label=\"centered\">\r\n                    <img src={English} width={22} />\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n{/* \r\n            <ToggleButtonGroup value={alignment1} exclusive size='small' onChange={handleAlignment1} aria-label=\"text alignment\" >\r\n                <ToggleButton value=\"L\" aria-label=\"left aligned\">\r\n                    ðŸŒ™\r\n                </ToggleButton>\r\n                <ToggleButton value=\"D\" aria-label=\"centered\">\r\n                    ðŸ”†\r\n                </ToggleButton>\r\n            </ToggleButtonGroup> */}\r\n            \r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default DarkModeToggle;"]},"metadata":{},"sourceType":"module"}